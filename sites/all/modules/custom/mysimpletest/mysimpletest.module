<?php



/**
* @file
*	Implements hook_node_info()
*/


function mysimpletest_node_info() {
	$node_type['simpletest_type'] = [
	'name' => t('Simple Test Example Node Type'),
		'base' => 'mysimpletest',
		'description' => t('Simple test example node page test type'),
			];

			return $node_type;
		}

//creating permission

		function mysimpletest_permission() {
			$perm['extra special edit any simpletest type content'] = [
			'title' =>'Extra field from My Simpletest',
			'description' => "Testing dude"
			];
			return $perm;
		}

// chekcing access permission


		function mysimpletest_node_access($node, $op, $account) {
			$type = is_string($node)? $node: $node->type;
			if ( ($type != 'simpletest_type') || ($op !='update' && $op !='delete')) {
		return NODE_ACCESS_IGNORE;
	}
// if its simplete test and user has access to permissino the return true
	if ( ($op == 'delete') && (user_access('extra special edit any simpletest type content', $account) && ($account->uid == $node->uid))) {
	return NODE_ACCESS_ALLOW;
}
return NODE_ACCESS_DENY;
}


function mysimpletest_form($node, $form_state) {
	$type = node_type_get_type($node);
	$form = [];
	if ($type->has_title) {
		$form['title'] = [
		'#type' => 'textfield',
		'#title' => check_plain($type->title_label),
			'#required' => TRUE,
			'#default_value' => $node->title,
			'#maxlengtg' => 255,
			'#weight' => -3
			];
		}

		return $form;
	}



	function mysimpletest_empty_mysql_date($date) {
		if ( empty($date) || $date == '0000-00-00' || $date == '0000-00-00 00:00:00') {
			return TRUE;
		}
		return FALSE;
	}
